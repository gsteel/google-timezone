name: "Continuous Integration"
on:
  push:
  pull_request:

env:
  php_extensions: curl,json,sockets
  default_php: 8.1

jobs:

  cs-check:
    name: CS Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: shivammathur/setup-php@2.30.0
        with:
          php-version: ${{ env.default_php }}
          extensions: ${{ env.php_extensions }}
          tools: cs2pr
      - uses: ramsey/composer-install@3.0.0
      - run: vendor/bin/phpcs --report=checkstyle -q | cs2pr

  psalm:
    name: Psalm Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: shivammathur/setup-php@2.30.0
        with:
          php-version: ${{ env.default_php }}
          extensions: ${{ env.php_extensions }}
          tools: cs2pr
      - uses: ramsey/composer-install@3.0.0
      - run: vendor/bin/psalm --stats --shepherd --output-format=github

  infection:
    name: "Mutation Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: shivammathur/setup-php@2.30.0
        with:
          php-version: ${{ env.default_php }}
          extensions: ${{ env.php_extensions }}
          coverage: pcov
          ini-values: pcov.enabled=1
      - uses: ramsey/composer-install@3.0.0
      - run: vendor/bin/infection --configuration=infection.json

  run-tests:

    name: "PHPUnit on ${{ matrix.php-version }}, Dependencies: ${{ matrix.dependencies }}"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        dependencies:
          - "lowest"
          - "highest"
          - "locked"

    steps:
      - uses: actions/checkout@v4.1.1
      - uses: shivammathur/setup-php@2.30.0
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.php_extensions }}
          coverage: pcov
          ini-values: pcov.enabled=1
      - uses: ramsey/composer-install@3.0.0
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ matrix.composer-options }}"
      - run: php ./vendor/bin/phpunit --coverage-clover=coverage.xml
      - uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-with-api-key:
    name: Integration Tests using API Key
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: shivammathur/setup-php@2.30.0
        with:
          php-version: 8.1
          extensions: ${{ env.php_extensions }}
          coverage: pcov
          ini-values: pcov.enabled=1
      - uses: ramsey/composer-install@3.0.0
        with:
          composer-options: "${{ matrix.composer-options }}"
      - run: php ./vendor/bin/phpunit --coverage-clover=coverage.xml
        env:
          API_KEY: ${{ secrets.API_KEY }}
      - uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  composer-require-checker:
    name: "Check for missing dependencies"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.1
      - uses: shivammathur/setup-php@2.30.0
        with:
          php-version: '8.1'
          ini-values: memory_limit=-1
          extensions: ${{ env.php_extensions }}
      - uses: ramsey/composer-install@3.0.0
      - run: composer global config bin-dir /usr/local/bin
      - run: composer global require -W maglnet/composer-require-checker
      - run: /usr/local/bin/composer-require-checker check
